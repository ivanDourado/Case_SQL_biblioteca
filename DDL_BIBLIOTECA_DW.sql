-- COMANDO BANCO DE DADOS
DROP DATABASE IF EXISTS BIBLIOTECA_DB_DW;
CREATE DATABASE IF NOT EXISTS BIBLIOTECA_DB_DW;
USE BIBLIOTECA_DB_DW;


-- EDITORA

-- CRIANDO TABELA EDITORA
DROP TABLE IF EXISTS EDITORA;
CREATE TABLE IF NOT EXISTS EDITORA (
	ID_EDITORA INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOME_EDITORA VARCHAR(40) NOT NULL,
    ENDERECO VARCHAR(40) NOT NULL,
    NUMERO NUMERIC(8),
    BAIRRO VARCHAR(20),
    CEP NUMERIC(8),
    CIDADE VARCHAR(20) NOT NULL,
    ESTADO CHAR(2),
    PAIS VARCHAR(20),
    TEL1 NUMERIC(14),
    TEL2 NUMERIC(14)
);

-- CRIANDO VIEW EDITORA
CREATE VIEW VIEW_EDITORA AS (SELECT 
	ID_EDITORA,
    NOME_EDITORA,
    SUBSTRING_INDEX(LOGRADOURO, (SUBSTRING_INDEX(LOGRADOURO, ' ', -1)),1) AS ENDERECO,
    SUBSTRING_INDEX(LOGRADOURO, ' ', -1) AS NUMERO,
    NULL AS BAIRRO,
    NULL AS CEP,
    CIDADE,
    NULL AS ESTADO,
    NULL AS PAIS,
    NULL AS TEL1,
    NULL AS TEL2
	FROM EDITORA_ORIGEM
);

-- CRIANDO TABELA INTERMEDIARIA EDITORA
CREATE TABLE NOVA_EDITORA AS SELECT * FROM VIEW_EDITORA;

-- TIPOFICANDO INTERMEDIARIA EDITORA
ALTER TABLE NOVA_EDITORA MODIFY ID_EDITORA INT;
ALTER TABLE NOVA_EDITORA MODIFY NOME_EDITORA VARCHAR(40);
ALTER TABLE NOVA_EDITORA MODIFY ENDERECO VARCHAR(40);
ALTER TABLE NOVA_EDITORA MODIFY NUMERO NUMERIC(8);
ALTER TABLE NOVA_EDITORA MODIFY BAIRRO VARCHAR (30);
ALTER TABLE NOVA_EDITORA MODIFY CEP NUMERIC(8);
ALTER TABLE NOVA_EDITORA MODIFY CIDADE VARCHAR(20);
ALTER TABLE NOVA_EDITORA MODIFY ESTADO CHAR(2);
ALTER TABLE NOVA_EDITORA MODIFY PAIS VARCHAR(25);
ALTER TABLE NOVA_EDITORA MODIFY TEL1 NUMERIC(14);
ALTER TABLE NOVA_EDITORA MODIFY TEL2 NUMERIC(14);

-- INSERTS DE NOVA_EDITORA PARA EDITORA
INSERT INTO EDITORA SELECT * FROM NOVA_EDITORA;
-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA EDITORA
DROP TABLE EDITORA_ORIGEM;
DROP VIEW VIEW_EDITORA;
DROP TABLE NOVA_EDITORA;

-- AUTOR

-- CRIANDO TABELA AUTOR
DROP TABLE IF EXISTS AUTOR;
CREATE TABLE IF NOT EXISTS AUTOR (
	ID_AUTOR INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOME_AUTOR VARCHAR(40) NOT NULL,
    PAIS_AUTOR VARCHAR(20)
);

-- CRIANDO VIEW AUTOR
CREATE VIEW VIEW_AUTOR AS (SELECT 
	ID_AUTOR,
    NOME_AUTOR,
    NULL AS PAIS_AUTOR
	FROM AUTOR_ORIGEM 
);

-- CRIANDO TABELA INTERMEDIARIA AUTOR
CREATE TABLE NOVA_AUTOR AS SELECT * FROM VIEW_AUTOR;

-- TIPIFICANDO TABELA INTERMEDIARIA AUTOR
ALTER TABLE NOVA_AUTOR MODIFY ID_AUTOR INT;
ALTER TABLE NOVA_AUTOR MODIFY NOME_AUTOR VARCHAR(40);
ALTER TABLE NOVA_AUTOR MODIFY PAIS_AUTOR VARCHAR(20);

-- INSERTS DE NOVA_AUTOR PARA AUTOR
INSERT INTO AUTOR SELECT * FROM NOVA_AUTOR;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA AUTOR
DROP TABLE AUTOR_ORIGEM;
DROP VIEW VIEW_AUTOR;
DROP TABLE NOVA_AUTOR;


-- OBRA

-- CRIANDO TABELA OBRA
DROP TABLE IF EXISTS OBRA;
CREATE TABLE IF NOT EXISTS OBRA(
	ID_OBRA INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_EDITORA INT NOT NULL,
    ID_AUTOR INT NOT NULL,
    TITULO_OBRA VARCHAR(40),
    NUMERO_PUBLICACAO INT NOT NULL,
    GENERO VARCHAR(20),
    DATA_PUBLICACAO DATE,
    CONSTRAINT FK_EDITORA_OBRA FOREIGN KEY (ID_EDITORA) REFERENCES EDITORA (ID_EDITORA),
    CONSTRAINT FK_AUTOR_OBRA FOREIGN KEY (ID_AUTOR) REFERENCES AUTOR (ID_AUTOR)
);

-- CRIANDO VIEW OBRA
CREATE VIEW VIEW_OBRA AS (SELECT
	ID_OBRA,
    ID_EDITORA,
    ID_AUTOR,
    TITULO_OBRA,
    NUMERO_PUBLICAÇÃO AS NUMERO_PUBLICACAO,
    GÊNERO AS GENERO,
    STR_TO_DATE(DATA_PUBLICAÇÃO, '%d/%m/%Y') AS DATA_PUBLICACAO
FROM OBRA_ORIGEM
);

-- CRIANDO TABELA INTERMEDIARIA OBRA
CREATE TABLE NOVA_OBRA AS SELECT * FROM VIEW_OBRA;

-- TIPICIFANDO TABELA INTERMEDIARIA OBRA
ALTER TABLE NOVA_OBRA MODIFY ID_OBRA INT;
ALTER TABLE NOVA_OBRA MODIFY ID_EDITORA INT;
ALTER TABLE NOVA_OBRA MODIFY ID_AUTOR INT;
ALTER TABLE NOVA_OBRA MODIFY TITULO_OBRA VARCHAR(40);
ALTER TABLE NOVA_OBRA MODIFY NUMERO_PUBLICACAO INT;
ALTER TABLE NOVA_OBRA MODIFY GENERO VARCHAR(20);

-- INSERTS DE NOVA_OBRA PARA OBRA
INSERT INTO OBRA SELECT * FROM NOVA_OBRA;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA OBRA
DROP TABLE OBRA_ORIGEM;
DROP VIEW VIEW_OBRA;
DROP TABLE NOVA_OBRA;


-- ESTOQUE

-- CRIANDO TABELA ESTOQUE
DROP TABLE IF EXISTS ESTOQUE;
CREATE TABLE IF NOT EXISTS ESTOQUE (
	ID_ESTOQUE INT NOT NULL AUTO_INCREMENT,
    ID_OBRA INT NOT NULL,
    QUANTIDADE_LIVRO INT NOT NULL,
    VALOR_UNITARIO DECIMAL(5,2),
    CONSTRAINT FK_OBRA_ESTOQUE FOREIGN KEY (ID_OBRA) REFERENCES OBRA (ID_OBRA),
    PRIMARY KEY (ID_ESTOQUE, ID_OBRA)
);
SELECT* FROM ESTOQUE_ORIGEM;
-- CRIANDO VIEW ESTOQUE

CREATE VIEW VIEW_ESTOQUE AS (SELECT
	ID_ESTOQUE,
    ID_OBRA,
    QUANTIDADE_LIVRO,
    REPLACE(REPLACE(REPLACE(VALOR_UNITARIO, '.',''), ',', '.'), 'R$ ', '') AS VALOR_UNITARIO
FROM ESTOQUE_ORIGEM);

-- CRIANDO TABELA INTERMEDIARIA ESTOQUE
CREATE TABLE NOVA_ESTOQUE AS SELECT * FROM VIEW_ESTOQUE;

-- TIPIFICANDO TABELA INTERMEDIARIA ESTOQUE
ALTER TABLE NOVA_ESTOQUE MODIFY ID_ESTOQUE INT;
ALTER TABLE NOVA_ESTOQUE MODIFY ID_OBRA INT;
ALTER TABLE NOVA_ESTOQUE MODIFY QUANTIDADE_LIVRO INT;
ALTER TABLE NOVA_ESTOQUE MODIFY VALOR_UNITARIO DECIMAL(5,2);

-- INSERTS DE NOVA_ESTOQUE PARA ESTOQUE
INSERT INTO ESTOQUE SELECT * FROM NOVA_ESTOQUE;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA ESTOQUE
DROP TABLE ESTOQUE_ORIGEM;
DROP VIEW VIEW_ESTOQUE;
DROP TABLE NOVA_ESTOQUE;



-- USUARIO 
-- TELEFONE USUARIO
-- CRIANDO TABELA USUARIO
DROP TABLE IF EXISTS USUARIO;
CREATE TABLE IF NOT EXISTS USUARIO (
	ID_USUARIO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOME_USUARIO VARCHAR(40) NOT NULL,
    CPF CHAR(14) NOT NULL,
    ENDERECO VARCHAR(40) NOT NULL,
    NUMERO NUMERIC(8),
    BAIRRO VARCHAR(40),
    CEP NUMERIC(8),
    CIDADE VARCHAR(25),
    ESTADO CHAR(2),
    PAIS VARCHAR(20),
    TEL1 NUMERIC(14),
    TEL2 NUMERIC(14)
);

-- CRIANDO VIEW USUARIO
CREATE VIEW VIEW_USUARIO AS (SELECT 
	ID_USUARIO,
	NOME_USUARIO,
	REPLACE(REPLACE(CPF, '.', ''), '-', '') AS CPF,
	SUBSTRING_INDEX(LOGRADOURO, (SUBSTRING_INDEX(LOGRADOURO, ' ', -1)),1) AS ENDERECO,
    SUBSTRING_INDEX(LOGRADOURO, ' ', -1) AS NUMERO,
    BAIRRO,
    REPLACE(CEP,'-','')AS CEP,
    NULL AS CIDADE,
    NULL AS ESTADO,
    NULL AS PAIS,
    REPLACE(TELEFONE, '-', '') AS TEL1,
    NULL AS TEL2
FROM USUARIO_ORIGEM);

-- CRIANDO TABELA INTERMEDIARIA USUARIO
CREATE TABLE NOVA_USUARIO AS SELECT * FROM VIEW_USUARIO;

-- TIPIFICANDO TABELA INTERMEDIARIA USUARIO
ALTER TABLE NOVA_USUARIO MODIFY ID_USUARIO INT;
ALTER TABLE NOVA_USUARIO MODIFY NOME_USUARIO VARCHAR(40);
ALTER TABLE NOVA_USUARIO MODIFY CPF CHAR(14);
ALTER TABLE NOVA_USUARIO MODIFY ENDERECO VARCHAR(40);
ALTER TABLE NOVA_USUARIO MODIFY NUMERO NUMERIC(8);
ALTER TABLE NOVA_USUARIO MODIFY BAIRRO VARCHAR(40);
ALTER TABLE NOVA_USUARIO MODIFY CEP NUMERIC(8);
ALTER TABLE NOVA_USUARIO MODIFY CIDADE VARCHAR(25);
ALTER TABLE NOVA_USUARIO MODIFY ESTADO CHAR(2);
ALTER TABLE NOVA_USUARIO MODIFY PAIS VARCHAR(20);
ALTER TABLE NOVA_USUARIO MODIFY TEL1 NUMERIC(14);
ALTER TABLE NOVA_USUARIO MODIFY TEL2 NUMERIC(14);

-- INSERTS DE NOVA_USUARIO PARA USUARIO
INSERT INTO USUARIO SELECT * FROM NOVA_USUARIO;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA USUARIO
DROP TABLE USUARIO_ORIGEM;
DROP VIEW VIEW_USUARIO;
DROP TABLE NOVA_USUARIO;



-- CARGO
-- ARRUMAR SALARIO CARGO

-- CRIANDO TABELA CARGO
DROP TABLE IF EXISTS CARGO;
CREATE TABLE IF NOT EXISTS CARGO(
	ID_CARGO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NOME_CARGO VARCHAR(50) NOT NULL,
    SALARIO DECIMAL(7,2) NOT NULL
);

-- CRIANDO VIEW CARGO
CREATE VIEW VIEW_CARGO AS (SELECT
	ID_CARGO,
    NOME_CARGO,
    REPLACE(REPLACE(REPLACE(SALARIO, '.', ''), ',', '.'), 'R$ ', '') AS SALARIO
FROM CARGO_ORIGEM);

-- CRIANDO TABELA INTERMEDIARIA CARGO
CREATE TABLE NOVA_CARGO AS SELECT * FROM VIEW_CARGO;

-- TIPIFICANDO TABELA INTERMEDIARIA CARGO
ALTER TABLE NOVA_CARGO MODIFY ID_CARGO INT;
ALTER TABLE NOVA_CARGO MODIFY NOME_CARGO VARCHAR(50);
ALTER TABLE NOVA_CARGO MODIFY SALARIO DECIMAL(7,2);

-- INSERTS DE NOVA_CARGO PARA CARGO
INSERT INTO CARGO SELECT * FROM NOVA_CARGO;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA CARGO
DROP TABLE CARGO_ORIGEM;
DROP VIEW VIEW_CARGO;
DROP TABLE NOVA_CARGO;



-- DEPARTAMENTO

-- CRIANDO TABELA DEPARTAMENTO
DROP TABLE IF EXISTS DEPARTAMENTO;
CREATE TABLE IF NOT EXISTS DEPARTAMENTO (
	ID_DEPARTAMENTO INT NOT NULL AUTO_INCREMENT,
    ID_CARGO INT,
    NOME_DEPARTAMENTO VARCHAR(20),
    CONSTRAINT FK_CARGO_DEPARTAMENTO FOREIGN KEY (ID_CARGO) REFERENCES CARGO (ID_CARGO),
    PRIMARY KEY (ID_DEPARTAMENTO, ID_CARGO)
);

-- CRIANDO VIEW DEPARTAMENTO
CREATE VIEW VIEW_DEPARTAMENTO AS (SELECT 
	ID_DEPARTAMENTO,
    ID_CARGO,
    NOME_DEPARTAMENTO
FROM
	DEPARTAMENTO_ORIGEM
);

-- CRIANDO TABELA INTERMEDIARIA DEPARTAMENTO;
CREATE TABLE NOVA_DEPARTAMENTO AS SELECT * FROM VIEW_DEPARTAMENTO;

-- TIPIFICANDO TABELA INTERMEDIARIA DEPARTAMENTO;
ALTER TABLE NOVA_DEPARTAMENTO MODIFY ID_DEPARTAMENTO INT;
ALTER TABLE NOVA_DEPARTAMENTO MODIFY ID_CARGO INT;
ALTER TABLE NOVA_DEPARTAMENTO MODIFY NOME_DEPARTAMENTO VARCHAR(20);

-- INSERTS DE NOVA_DEPARTAMENTO PARA DEPARTAMENTO
INSERT INTO DEPARTAMENTO SELECT * FROM NOVA_DEPARTAMENTO;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA DEPARTAMENTO
DROP TABLE DEPARTAMENTO_ORIGEM;
DROP VIEW VIEW_DEPARTAMENTO;
DROP TABLE NOVA_DEPARTAMENTO;


-- FUNCIONARIO
-- ANIVERSARIO FUNCIONARIO

-- CRIANDO TABELA FUNCIONARIO
DROP TABLE IF EXISTS FUNCIONARIO;
CREATE TABLE IF NOT EXISTS FUNCIONARIO (
	ID_FUNCIONARIO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    ID_CARGO INT NOT NULL,
    ID_DEPARTAMENTO INT NOT NULL,
    NOME_FUNCIONARIO VARCHAR(40) NOT NULL,
    DATA_ADMISSAO DATE NOT NULL,
    DATA_DEMISSAO DATE NOT NULL,
    DATA_NASCIMENTO DATE,
    CONSTRAINT FK_CARGO_FUNCIONARIO FOREIGN KEY (ID_CARGO) REFERENCES CARGO (ID_CARGO),
    CONSTRAINT FK_DEPARTAMENTO_FUNCIONARIO FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO (ID_DEPARTAMENTO)
);

-- CRIANDO VIEW FUNCIONARIO
CREATE VIEW VIEW_FUNCIONARIO AS (SELECT
	ID_FUNCIONARIO,
    ID_CARGO,
    ID_DEPARTAMENTO,
    NOME_FUNCIONARIO,
    STR_TO_DATE(DATA_ADMISSAO, '%d/%m/%Y') AS DATA_ADMISSAO,
    STR_TO_DATE(DATA_DEMISSAO, '%d/%m/%Y') AS DATA_DEMISSAO,
	STR_TO_DATE(DATA_NASCIMENTO, '%d/%m/%Y') AS DATA_NASCIMENTO
FROM
	FUNCIONARIO_ORIGEM
);

-- CRIANDO TABELA INTERMEDIARIA FUNCIONARIO
CREATE TABLE NOVA_FUNCIONARIO AS SELECT * FROM VIEW_FUNCIONARIO;

-- TIPIFICANDO TABELA INTERMEDIARIA FUNCIONARIO
ALTER TABLE NOVA_FUNCIONARIO MODIFY ID_FUNCIONARIO INT ;
ALTER TABLE NOVA_FUNCIONARIO MODIFY ID_CARGO INT;
ALTER TABLE NOVA_FUNCIONARIO MODIFY ID_DEPARTAMENTO INT;
ALTER TABLE NOVA_FUNCIONARIO MODIFY DATA_NASCIMENTO DATE;

-- INSERTS DE NOVA_FUNCIONARIO PARA FUNCIONARIO
INSERT INTO FUNCIONARIO SELECT * FROM NOVA_FUNCIONARIO;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA FUNCIONARIO
DROP TABLE FUNCIONARIO_ORIGEM;
DROP VIEW VIEW_FUNCIONARIO;
DROP TABLE NOVA_FUNCIONARIO;


-- EMPRESTIMO

-- CRIANDO TABELA EMPRESTIMO
DROP TABLE IF EXISTS EMPRESTIMO;
CREATE TABLE IF NOT EXISTS EMPRESTIMO (
	ID_EMPRESTIMO INT NOT NULL AUTO_INCREMENT,
    ID_FUNCIONARIO INT NOT NULL,
    ID_USUARIO INT NOT NULL,
    ID_ESTOQUE INT NOT NULL,
    ID_OBRA INT NOT NULL,
    DATA_EMPRESTIMO DATE NOT NULL,
    HORA_EMPRESTIMO TIME NOT NULL,
    DATA_ENTREGA DATE NOT NULL,
    CONSTRAINT FK_FUNCIONARIO_EMPRESTIMO FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO (ID_FUNCIONARIO),
    CONSTRAINT FK_USUARIO_EMPRESTIMO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO),
    CONSTRAINT FK_ESTOQUE_EMPRESTIMO FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE),
    CONSTRAINT FK_OBRA_EMPRESTIMO FOREIGN KEY (ID_OBRA) REFERENCES OBRA (ID_OBRA),
    PRIMARY KEY (ID_EMPRESTIMO, ID_FUNCIONARIO, ID_USUARIO, ID_ESTOQUE, ID_OBRA)
);


-- CRIANDO VIEW EMPRESTIMO
CREATE VIEW VIEW_EMPRESTIMO AS (SELECT
	ID_EMPRESTIMO,
    ID_FUNCIONARIO,
    ID_USUARIO,
    ID_ESTOQUE,
    ID_OBRA,
    STR_TO_DATE(DATA_EMPRESTIMO, '%d/%m/%Y') AS DATA_EMPRESTIMO,
    STR_TO_DATE(HORA_EMPRESTIMO, '%H:%i:%s') AS HORA_EMPRESTIMO,
    STR_TO_DATE(DATA_ENTREGA, '%d/%m/%Y') AS DATA_ENTREGA
FROM EMPRESTIMO_ORIGEM
);

-- CRIANDO TABELA INTERMEDIARIA EMPRESTIMO
CREATE TABLE NOVA_EMPRESTIMO AS SELECT * FROM VIEW_EMPRESTIMO;

-- TIPIFICANDO TABELA INTERMEDIARIA EMPRESTIMO
ALTER TABLE NOVA_EMPRESTIMO MODIFY ID_EMPRESTIMO INT ;
ALTER TABLE NOVA_EMPRESTIMO MODIFY ID_FUNCIONARIO INT;
ALTER TABLE NOVA_EMPRESTIMO MODIFY ID_USUARIO INT;
ALTER TABLE NOVA_EMPRESTIMO MODIFY ID_ESTOQUE INT;
ALTER TABLE NOVA_EMPRESTIMO MODIFY ID_OBRA INT;

-- INSERTS DE NOVA_EMPRESTIMO PARA EMPRESTIMO
INSERT INTO EMPRESTIMO SELECT * FROM NOVA_EMPRESTIMO;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA EMPRESTIMO
DROP TABLE EMPRESTIMO_ORIGEM;
DROP VIEW VIEW_EMPRESTIMO;
DROP TABLE NOVA_EMPRESTIMO;


-- RESERVA

-- CRIANDO TABELA RESERVA
DROP TABLE IF EXISTS RESERVA;
CREATE TABLE IF NOT EXISTS RESERVA (
	ID_RESERVA INT NOT NULL AUTO_INCREMENT,
    ID_EMPRESTIMO INT NOT NULL,
    ID_FUNCIONARIO INT NOT NULL,
    ID_ESTOQUE INT NOT NULL,
    ID_USUARIO INT NOT NULL,
    ID_OBRA INT NOT NULL,
    STATUS_LIVRO VARCHAR(20) NOT NULL,
    DATA_RESERVA DATE NOT NULL,
    HORA_RESERVA TIME NOT NULL,
    CONSTRAINT FK_EMPRESTIMO_RESERVA FOREIGN KEY (ID_EMPRESTIMO) REFERENCES EMPRESTIMO (ID_EMPRESTIMO),
    CONSTRAINT FK_FUNCIONARIO_RESERVA FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO (ID_FUNCIONARIO),
    CONSTRAINT FK_ESTOQUE_RESERVA FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE),
    CONSTRAINT FK_USUARIO_RESERVA FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO),
    CONSTRAINT FK_OBRA_RESERVA FOREIGN KEY (ID_OBRA) REFERENCES OBRA (ID_OBRA),
    PRIMARY KEY (ID_RESERVA, ID_EMPRESTIMO, ID_FUNCIONARIO, ID_ESTOQUE, ID_USUARIO, ID_OBRA)
);

-- CRIANDO VIEW RESERVA
CREATE VIEW VIEW_RESERVA AS (SELECT
	ID_RESERVA,
    ID_EMPRESTIMO,
    ID_FUNCIONARIO,
    ID_ESTOQUE,
    ID_USUARIO,
    ID_OBRA,
    STATUS_LIVRO,
    STR_TO_DATE(DATA_RESERVA, '%d/%m/%Y') AS DATA_RESERVA,
    STR_TO_DATE(HORA_RESERVA, '%H:%i:%s') AS HORA_RESERVA
FROM RESERVA_ORIGEM
);

-- CRIANDO TABELA INTERMEDIARIA RESERVA
CREATE TABLE NOVA_RESERVA AS SELECT * FROM VIEW_RESERVA;

-- TIPIFICANDO TABELA INTERMEDIARIA RESERVA
ALTER TABLE NOVA_RESERVA MODIFY ID_RESERVA INT;
ALTER TABLE NOVA_RESERVA MODIFY ID_EMPRESTIMO INT;
ALTER TABLE NOVA_RESERVA MODIFY ID_FUNCIONARIO INT;
ALTER TABLE NOVA_RESERVA MODIFY ID_ESTOQUE INT;
ALTER TABLE NOVA_RESERVA MODIFY ID_USUARIO INT;
ALTER TABLE NOVA_RESERVA MODIFY ID_OBRA INT;
ALTER TABLE NOVA_RESERVA MODIFY STATUS_LIVRO VARCHAR(20);

-- INSERTS DE NOVA_RESERVA PARA RESERVA
INSERT INTO RESERVA SELECT * FROM NOVA_RESERVA;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA RESERVA
DROP TABLE RESERVA_ORIGEM;
DROP VIEW VIEW_RESERVA;
DROP TABLE NOVA_RESERVA;


-- DEVOLUCAO

-- CRIANDO TABELA DEVOLUCAO
DROP TABLE IF EXISTS DEVOLUCAO;
CREATE TABLE IF NOT EXISTS DEVOLUCAO (
	ID_DEVOLUCAO INT NOT NULL AUTO_INCREMENT,
	ID_FUNCIONARIO INT NOT NULL,
    ID_EMPRESTIMO INT NOT NULL,
    ID_ESTOQUE INT NOT NULL,
    ID_USUARIO INT NOT NULL,
    ID_OBRA INT NOT NULL,
	DATA_DEVOLUCAO DATE NOT NULL,
    HORA_DEVOLUCAO TIME NOT NULL,
    MULTA_ATRASO CHAR(1) NOT NULL,
    CONSTRAINT FK_FUNCIONARIO_DEVOLUCAO FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO (ID_FUNCIONARIO),
    CONSTRAINT FK_EMPRESTIMO_DEVOLUCAO FOREIGN KEY (ID_EMPRESTIMO) REFERENCES EMPRESTIMO (ID_EMPRESTIMO),
    CONSTRAINT FK_ESTOQUE_DEVOLUCAO FOREIGN KEY (ID_ESTOQUE) REFERENCES ESTOQUE (ID_ESTOQUE),
    CONSTRAINT FK_USUARIO_DEVOLUCAO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO),
    CONSTRAINT FK_OBRA_DEVOLUCAO FOREIGN KEY (ID_OBRA) REFERENCES OBRA (ID_OBRA),
    PRIMARY KEY (ID_DEVOLUCAO, ID_FUNCIONARIO, ID_EMPRESTIMO, ID_ESTOQUE, ID_USUARIO, ID_OBRA)
);


-- CRIANDO VIEW DEVOLUCAO
DROP VIEW IF EXISTS VIEW_DEVOLUCAO;
CREATE VIEW VIEW_DEVOLUCAO AS (SELECT
	ID_DEVOLUCAO,
    ID_FUNCIONARIO,
    ID_EMPRESTIMO,
    ID_ESTOQUE,
    ID_USUARIO,
    ID_OBRA,
    STR_TO_DATE(DATA_DEVOLUCAO, '%d/%m/%Y') AS DATA_DEVOLUCAO,
    STR_TO_DATE(HORA_DEVOLUCAO, '%H:%i:%s') AS HORA_DEVOLUCAO,
    MULTA_ATRASO
FROM DEVOLUCAO_ORIGEM
);

-- CRIANDO TABELA INTERMEDIARIA DEVOLUCAO
CREATE TABLE NOVA_DEVOLUCAO AS SELECT * FROM VIEW_DEVOLUCAO;

-- TIPIFICANDO TABELA INTERMEDIARIA DEVOLUCAO
ALTER TABLE NOVA_DEVOLUCAO MODIFY ID_DEVOLUCAO INT;
ALTER TABLE NOVA_DEVOLUCAO MODIFY ID_FUNCIONARIO INT;
ALTER TABLE NOVA_DEVOLUCAO MODIFY ID_EMPRESTIMO INT;
ALTER TABLE NOVA_DEVOLUCAO MODIFY ID_ESTOQUE INT;
ALTER TABLE NOVA_DEVOLUCAO MODIFY ID_USUARIO INT;
ALTER TABLE NOVA_DEVOLUCAO MODIFY ID_OBRA INT;
ALTER TABLE NOVA_DEVOLUCAO MODIFY MULTA_ATRASO CHAR(1);

-- INSERTS DE NOVA_DEVOLUCAO PARA DEVOLUCAO
INSERT INTO DEVOLUCAO SELECT * FROM NOVA_DEVOLUCAO;

-- EXCLUINDO TABELA ORIGEM, VIEW E INTERMEDIARIA DEVOLUCAO
DROP TABLE DEVOLUCAO_ORIGEM;
DROP VIEW VIEW_DEVOLUCAO;
DROP TABLE NOVA_DEVOLUCAO;


-- FIM

